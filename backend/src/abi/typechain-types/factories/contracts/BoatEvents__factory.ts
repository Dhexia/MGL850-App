/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  BoatEvents,
  BoatEventsInterface,
} from "../../contracts/BoatEvents";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract BoatPassport",
        name: "_passport",
        type: "address",
      },
      {
        internalType: "contract RoleRegistry",
        name: "_roles",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "boatId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "enum BoatEvents.EventKind",
        name: "kind",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "address",
        name: "author",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "ipfsHash",
        type: "string",
      },
    ],
    name: "BoatEventLogged",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "boatId",
        type: "uint256",
      },
      {
        internalType: "enum BoatEvents.EventKind",
        name: "kind",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "ipfsHash",
        type: "string",
      },
    ],
    name: "addEvent",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "boatId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "eventByIndex",
    outputs: [
      {
        components: [
          {
            internalType: "enum BoatEvents.EventKind",
            name: "kind",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "author",
            type: "address",
          },
          {
            internalType: "string",
            name: "ipfsHash",
            type: "string",
          },
        ],
        internalType: "struct BoatEvents.EventData",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "boatId",
        type: "uint256",
      },
    ],
    name: "eventCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "passport",
    outputs: [
      {
        internalType: "contract BoatPassport",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "roles",
    outputs: [
      {
        internalType: "contract RoleRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c060405234801561001057600080fd5b5060405161192138038061192183398181016040528101906100329190610154565b8173ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250508073ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff16815250505050610194565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100d1826100a6565b9050919050565b60006100e3826100c6565b9050919050565b6100f3816100d8565b81146100fe57600080fd5b50565b600081519050610110816100ea565b92915050565b6000610121826100c6565b9050919050565b61013181610116565b811461013c57600080fd5b50565b60008151905061014e81610128565b92915050565b6000806040838503121561016b5761016a6100a1565b5b600061017985828601610101565b925050602061018a8582860161013f565b9150509250929050565b60805160a05161173e6101e36000396000818161030b015281816104920152818161066a01526106a601526000818161011601528181610347015281816105b50152610828015261173e6000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806317ba9c4d1461005c5780632e1ca3e41461007a578063392f5f64146100aa5780638dcbcc5f146100c8578063ccfc6795146100e4575b600080fd5b610064610114565b6040516100719190610bc1565b60405180910390f35b610094600480360381019061008f9190610c1c565b610138565b6040516100a19190610df6565b60405180910390f35b6100b2610309565b6040516100bf9190610e39565b60405180910390f35b6100e260048036038101906100dd9190610ede565b61032d565b005b6100fe60048036038101906100f99190610f52565b610ad3565b60405161010b9190610f8e565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000081565b610140610af2565b600080848152602001908152602001600020805490508210610197576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161018e90611006565b60405180910390fd5b60008084815260200190815260200160002082815481106101bb576101ba611026565b5b90600052602060002090600402016040518060800160405290816000820160009054906101000a900460ff1660038111156101f9576101f8610c5c565b5b600381111561020b5761020a610c5c565b5b8152602001600182015481526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160038201805461027f90611084565b80601f01602080910402602001604051908101604052809291908181526020018280546102ab90611084565b80156102f85780601f106102cd576101008083540402835291602001916102f8565b820191906000526020600020905b8154815290600101906020018083116102db57829003601f168201915b505050505081525050905092915050565b7f000000000000000000000000000000000000000000000000000000000000000081565b600073ffffffffffffffffffffffffffffffffffffffff167f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16636352211e866040518263ffffffff1660e01b815260040161039e9190610f8e565b602060405180830381865afa1580156103bb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103df91906110e1565b73ffffffffffffffffffffffffffffffffffffffff1603610435576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042c9061115a565b60405180910390fd5b6001600381111561044957610448610c5c565b5b83600381111561045c5761045b610c5c565b5b148061048b575060038081111561047657610475610c5c565b5b83600381111561048957610488610c5c565b5b145b1561056e577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663640ff5ce336040518263ffffffff1660e01b81526004016104e99190611189565b602060405180830381865afa158015610506573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061052a91906111dc565b610569576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056090611255565b60405180910390fd5b610919565b6002600381111561058257610581610c5c565b5b83600381111561059557610594610c5c565b5b036107e35760003373ffffffffffffffffffffffffffffffffffffffff167f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16636352211e876040518263ffffffff1660e01b815260040161060c9190610f8e565b602060405180830381865afa158015610629573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061064d91906110e1565b73ffffffffffffffffffffffffffffffffffffffff1614905060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166391d148547f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663056c99896040518163ffffffff1660e01b8152600401602060405180830381865afa15801561070f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061073391906112ab565b336040518363ffffffff1660e01b81526004016107519291906112e7565b602060405180830381865afa15801561076e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061079291906111dc565b9050818061079d5750805b6107dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107d39061135c565b60405180910390fd5b5050610918565b600060038111156107f7576107f6610c5c565b5b83600381111561080a57610809610c5c565b5b03610917573373ffffffffffffffffffffffffffffffffffffffff167f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16636352211e866040518263ffffffff1660e01b815260040161087f9190610f8e565b602060405180830381865afa15801561089c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108c091906110e1565b73ffffffffffffffffffffffffffffffffffffffff1614610916576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161090d906113c8565b60405180910390fd5b5b5b5b600080858152602001908152602001600020604051806080016040528085600381111561094957610948610c5c565b5b81526020014281526020013373ffffffffffffffffffffffffffffffffffffffff16815260200184848080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050815250908060018154018082558091505060019003906000526020600020906004020160009091909190915060008201518160000160006101000a81548160ff02191690836003811115610a0c57610a0b610c5c565b5b02179055506020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506060820151816003019081610a7791906115b9565b5050503373ffffffffffffffffffffffffffffffffffffffff16847fe21548a1891d49c737f47b6e90532bdaed6ce04255d2c48b8ba6bc8619d505b4858585604051610ac5939291906116d6565b60405180910390a350505050565b6000806000838152602001908152602001600020805490509050919050565b604051806080016040528060006003811115610b1157610b10610c5c565b5b815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001606081525090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610b87610b82610b7d84610b42565b610b62565b610b42565b9050919050565b6000610b9982610b6c565b9050919050565b6000610bab82610b8e565b9050919050565b610bbb81610ba0565b82525050565b6000602082019050610bd66000830184610bb2565b92915050565b600080fd5b600080fd5b6000819050919050565b610bf981610be6565b8114610c0457600080fd5b50565b600081359050610c1681610bf0565b92915050565b60008060408385031215610c3357610c32610bdc565b5b6000610c4185828601610c07565b9250506020610c5285828601610c07565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60048110610c9c57610c9b610c5c565b5b50565b6000819050610cad82610c8b565b919050565b6000610cbd82610c9f565b9050919050565b610ccd81610cb2565b82525050565b610cdc81610be6565b82525050565b6000610ced82610b42565b9050919050565b610cfd81610ce2565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610d3d578082015181840152602081019050610d22565b60008484015250505050565b6000601f19601f8301169050919050565b6000610d6582610d03565b610d6f8185610d0e565b9350610d7f818560208601610d1f565b610d8881610d49565b840191505092915050565b6000608083016000830151610dab6000860182610cc4565b506020830151610dbe6020860182610cd3565b506040830151610dd16040860182610cf4565b5060608301518482036060860152610de98282610d5a565b9150508091505092915050565b60006020820190508181036000830152610e108184610d93565b905092915050565b6000610e2382610b8e565b9050919050565b610e3381610e18565b82525050565b6000602082019050610e4e6000830184610e2a565b92915050565b60048110610e6157600080fd5b50565b600081359050610e7381610e54565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112610e9e57610e9d610e79565b5b8235905067ffffffffffffffff811115610ebb57610eba610e7e565b5b602083019150836001820283011115610ed757610ed6610e83565b5b9250929050565b60008060008060608587031215610ef857610ef7610bdc565b5b6000610f0687828801610c07565b9450506020610f1787828801610e64565b935050604085013567ffffffffffffffff811115610f3857610f37610be1565b5b610f4487828801610e88565b925092505092959194509250565b600060208284031215610f6857610f67610bdc565b5b6000610f7684828501610c07565b91505092915050565b610f8881610be6565b82525050565b6000602082019050610fa36000830184610f7f565b92915050565b600082825260208201905092915050565b7f496e646578206f7574206f662072616e67650000000000000000000000000000600082015250565b6000610ff0601283610fa9565b9150610ffb82610fba565b602082019050919050565b6000602082019050818103600083015261101f81610fe3565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061109c57607f821691505b6020821081036110af576110ae611055565b5b50919050565b6110be81610ce2565b81146110c957600080fd5b50565b6000815190506110db816110b5565b92915050565b6000602082840312156110f7576110f6610bdc565b5b6000611105848285016110cc565b91505092915050565b7f556e6b6e6f776e20626f61740000000000000000000000000000000000000000600082015250565b6000611144600c83610fa9565b915061114f8261110e565b602082019050919050565b6000602082019050818103600083015261117381611137565b9050919050565b61118381610ce2565b82525050565b600060208201905061119e600083018461117a565b92915050565b60008115159050919050565b6111b9816111a4565b81146111c457600080fd5b50565b6000815190506111d6816111b0565b92915050565b6000602082840312156111f2576111f1610bdc565b5b6000611200848285016111c7565b91505092915050565b7f4f6e6c79206365727469666965642070726f0000000000000000000000000000600082015250565b600061123f601283610fa9565b915061124a82611209565b602082019050919050565b6000602082019050818103600083015261126e81611232565b9050919050565b6000819050919050565b61128881611275565b811461129357600080fd5b50565b6000815190506112a58161127f565b92915050565b6000602082840312156112c1576112c0610bdc565b5b60006112cf84828501611296565b91505092915050565b6112e181611275565b82525050565b60006040820190506112fc60008301856112d8565b611309602083018461117a565b9392505050565b7f4e6f7420616c6c6f776564000000000000000000000000000000000000000000600082015250565b6000611346600b83610fa9565b915061135182611310565b602082019050919050565b6000602082019050818103600083015261137581611339565b9050919050565b7f4f6e6c79206f776e6572206d6179206c6f672073616c65000000000000000000600082015250565b60006113b2601783610fa9565b91506113bd8261137c565b602082019050919050565b600060208201905081810360008301526113e1816113a5565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026114797fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261143c565b611483868361143c565b95508019841693508086168417925050509392505050565b60006114b66114b16114ac84610be6565b610b62565b610be6565b9050919050565b6000819050919050565b6114d08361149b565b6114e46114dc826114bd565b848454611449565b825550505050565b600090565b6114f96114ec565b6115048184846114c7565b505050565b5b818110156115285761151d6000826114f1565b60018101905061150a565b5050565b601f82111561156d5761153e81611417565b6115478461142c565b81016020851015611556578190505b61156a6115628561142c565b830182611509565b50505b505050565b600082821c905092915050565b600061159060001984600802611572565b1980831691505092915050565b60006115a9838361157f565b9150826002028217905092915050565b6115c282610d03565b67ffffffffffffffff8111156115db576115da6113e8565b5b6115e58254611084565b6115f082828561152c565b600060209050601f8311600181146116235760008415611611578287015190505b61161b858261159d565b865550611683565b601f19841661163186611417565b60005b8281101561165957848901518255600182019150602085019450602081019050611634565b868310156116765784890151611672601f89168261157f565b8355505b6001600288020188555050505b505050505050565b61169481610cb2565b82525050565b82818337600083830152505050565b60006116b58385610fa9565b93506116c283858461169a565b6116cb83610d49565b840190509392505050565b60006040820190506116eb600083018661168b565b81810360208301526116fe8184866116a9565b905094935050505056fea2646970667358221220966fd187d5fb7c743294e7390921e01cd01823ef9b639a2de3edb24ab62bfb4164736f6c634300081c0033";

type BoatEventsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BoatEventsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BoatEvents__factory extends ContractFactory {
  constructor(...args: BoatEventsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _passport: AddressLike,
    _roles: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_passport, _roles, overrides || {});
  }
  override deploy(
    _passport: AddressLike,
    _roles: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_passport, _roles, overrides || {}) as Promise<
      BoatEvents & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): BoatEvents__factory {
    return super.connect(runner) as BoatEvents__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BoatEventsInterface {
    return new Interface(_abi) as BoatEventsInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): BoatEvents {
    return new Contract(address, _abi, runner) as unknown as BoatEvents;
  }
}
